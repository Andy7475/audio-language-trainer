Source path:... y:\Python Scripts\audio-language-trainer\src\config_loader.py
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x0000020D8260F610>
Starting var:.. config_file = 'config.json'
12:47:17.757442 call       224     def __init__(self, config_file="config.json"):
12:47:17.759440 line       226         self.config_file = os.path.join(self.script_dir, config_file)
12:47:17.759440 line       227         self.config = SimpleNamespace()
12:47:17.759440 line       228         self._last_load_time = 0
12:47:17.760441 line       229         self._file_modified_time = 0
12:47:17.760441 line       230         self.voice_manager = VoiceManager()  # No immediate voice loading
12:47:17.760441 line       231         self._load_config()
12:47:17.761469 line       232 
    Starting var:.. self = <src.config_loader.ConfigLoader object at 0x0000020D8260F610>
    12:47:17.761469 call       266         """Load config with fallback values"""
    12:47:17.762453 line       268             if not os.path.exists(self.config_file):
    12:47:17.762453 line       269                 print(f"Warning: Config file not found at {self.config_file}")
    12:47:17.762453 line       276                     config_dict = json.load(f)
    New var:....... f = <_io.TextIOWrapper name='y:\\Python Scripts\\aud...er\\src\\config.json' mode='r' encoding='cp1252'>
    12:47:17.762453 line       277 
    New var:....... config_dict = {'SOURCE_LANGUAGE_CODE': 'en-GB', 'TARGET_LANGUA.../grammar_concepts.json', 'API_DELAY_SECONDS': 20}
    12:47:17.763449 line       276                     config_dict = json.load(f)
    12:47:17.763449 line       280                 config_dict.get("TARGET_LANGUAGE_CODE"), "TARGET_LANGUAGE_CODE"
    12:47:17.764439 line       281             )
    12:47:17.764439 line       280                 config_dict.get("TARGET_LANGUAGE_CODE"), "TARGET_LANGUAGE_CODE"
        Starting var:.. self = <src.config_loader.ConfigLoader object at 0x0000020D8260F610>
        Starting var:.. code = 'fr-FR'
        Starting var:.. field_name = 'TARGET_LANGUAGE_CODE'
        12:47:17.764439 call       234         self, code: str, field_name: str
        12:47:17.765451 line       238             raise ValueError(f"{field_name} must be specified")
        12:47:17.766441 line       241             language_alpha2 = code.split("-")[0].lower()
        12:47:17.766441 line       242             country_code = code.split("-")[1].upper() if "-" in code else None
        New var:....... language_alpha2 = 'fr'
        12:47:17.766441 line       243         except IndexError:
        New var:....... country_code = 'FR'
        12:47:17.766441 line       249         if not language:
        New var:....... language = Language(alpha_2='fr', alpha_3='fra', bibliographic='fre', name='French', scope='I', type='L')
        12:47:17.767440 line       250             raise ValueError(
        12:47:17.767440 line       255             country = pycountry.countries.get(alpha_2=country_code)
        12:47:17.768441 line       256             if not country:
        New var:....... country = Country(alpha_2='FR', alpha_3='FRA', flag='ðŸ‡«ðŸ‡·', ..., numeric='250', official_name='French Republic')
        12:47:17.768441 line       257                 raise ValueError(
        12:47:17.768441 line       264 
        12:47:17.768441 return     264 
        Return value:.. ('fr-FR', 'fr', 'French')
        Elapsed time: 00:00:00.005001
    New var:....... target_code = 'fr-FR'
    New var:....... target_alpha2 = 'fr'
    New var:....... target_name = 'French'
    12:47:17.769440 line       283                 config_dict.get("SOURCE_LANGUAGE_CODE"), "SOURCE_LANGUAGE_CODE"
    12:47:17.770440 line       284             )
    12:47:17.770440 line       283                 config_dict.get("SOURCE_LANGUAGE_CODE"), "SOURCE_LANGUAGE_CODE"
        Starting var:.. self = <src.config_loader.ConfigLoader object at 0x0000020D8260F610>
        Starting var:.. code = 'en-GB'
        Starting var:.. field_name = 'SOURCE_LANGUAGE_CODE'
        12:47:17.770440 call       234         self, code: str, field_name: str
        12:47:17.771440 line       238             raise ValueError(f"{field_name} must be specified")
        12:47:17.772440 line       241             language_alpha2 = code.split("-")[0].lower()
        12:47:17.772440 line       242             country_code = code.split("-")[1].upper() if "-" in code else None
        New var:....... language_alpha2 = 'en'
        12:47:17.772440 line       243         except IndexError:
        New var:....... country_code = 'GB'
        12:47:17.773440 line       249         if not language:
        New var:....... language = Language(alpha_2='en', alpha_3='eng', name='English', scope='I', type='L')
        12:47:17.773440 line       250             raise ValueError(
        12:47:17.774441 line       255             country = pycountry.countries.get(alpha_2=country_code)
        12:47:17.774441 line       256             if not country:
        New var:....... country = Country(alpha_2='GB', alpha_3='GBR', flag='ðŸ‡¬ðŸ‡§', ...d Kingdom of Great Britain and Northern Ireland')
        12:47:17.774441 line       257                 raise ValueError(
        12:47:17.775440 line       264 
        12:47:17.775440 return     264 
        Return value:.. ('en-GB', 'en', 'English')
        Elapsed time: 00:00:00.006000
    New var:....... source_code = 'en-GB'
    New var:....... source_alpha2 = 'en'
    New var:....... source_name = 'English'
    12:47:17.776440 line       288                 {
    12:47:17.777439 line       290                     "TARGET_LANGUAGE_ALPHA2": target_alpha2,
    12:47:17.777439 line       291                     "TARGET_LANGUAGE_NAME": target_name,
    12:47:17.777439 line       292                     "SOURCE_LANGUAGE_CODE": source_code,
    12:47:17.778441 line       293                     "SOURCE_LANGUAGE_ALPHA2": source_alpha2,
    12:47:17.778441 line       294                     "SOURCE_LANGUAGE_NAME": source_name,
    12:47:17.778441 line       295                 }
    12:47:17.778441 line       289                     "TARGET_LANGUAGE_CODE": target_code,
    12:47:17.778441 line       288                 {
    Modified var:.. config_dict = {'SOURCE_LANGUAGE_CODE': 'en-GB', 'TARGET_LANGUA...ALPHA2': 'en', 'SOURCE_LANGUAGE_NAME': 'English'}
    12:47:17.779440 line       299             self._last_load_time = time.time()
    12:47:17.779440 line       300             self._file_modified_time = (
    12:47:17.779440 line       303                 else 0
    12:47:17.780440 line       302                 if os.path.exists(self.config_file)
    12:47:17.780440 line       301                 os.path.getmtime(self.config_file)
    12:47:17.780440 return     301                 os.path.getmtime(self.config_file)
    Return value:.. None
    Elapsed time: 00:00:00.019971
12:47:17.781440 return     232 
Return value:.. None
Elapsed time: 00:00:00.023998
Source path:... y:\Python Scripts\audio-language-trainer\src\config_loader.py
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
Starting var:.. config_file = 'config.json'
12:47:22.057174 call       224     def __init__(self, config_file="config.json"):
12:47:22.059162 line       226         self.script_dir = os.path.dirname(os.path.abspath(__file__))
12:47:22.059162 line       227         self.config_file = os.path.join(self.script_dir, config_file)
12:47:22.060161 line       228         self.config = SimpleNamespace()
12:47:22.060161 line       229         self._last_load_time = 0
12:47:22.060161 line       230         self._file_modified_time = 0
12:47:22.060161 line       231         self.voice_manager = VoiceManager()  # No immediate voice loading
12:47:22.061160 line       232         self._load_config()
    Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
    12:47:22.061160 call       266     def _load_config(self):
    12:47:22.061160 line       268         try:
    12:47:22.062162 line       269             if not os.path.exists(self.config_file):
    12:47:22.062162 line       276                 with open(self.config_file, "r") as f:
    New var:....... f = <_io.TextIOWrapper name='y:\\Python Scripts\\aud...er\\src\\config.json' mode='r' encoding='cp1252'>
    12:47:22.062162 line       277                     config_dict = json.load(f)
    New var:....... config_dict = {'SOURCE_LANGUAGE_CODE': 'en-GB', 'TARGET_LANGUA.../grammar_concepts.json', 'API_DELAY_SECONDS': 20}
    12:47:22.063161 line       276                 with open(self.config_file, "r") as f:
    12:47:22.064162 line       280             target_code, target_alpha2, target_name = self._validate_language_code(
    12:47:22.064162 line       281                 config_dict.get("TARGET_LANGUAGE_CODE"), "TARGET_LANGUAGE_CODE"
    12:47:22.064162 line       280             target_code, target_alpha2, target_name = self._validate_language_code(
        Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
        Starting var:.. code = 'fr-FR'
        Starting var:.. field_name = 'TARGET_LANGUAGE_CODE'
        12:47:22.065161 call       234     def _validate_language_code(
        12:47:22.066162 line       238         if not code:
        12:47:22.067161 line       241         try:
        12:47:22.067161 line       242             language_alpha2 = code.split("-")[0].lower()
        New var:....... language_alpha2 = 'fr'
        12:47:22.067161 line       243             country_code = code.split("-")[1].upper() if "-" in code else None
        New var:....... country_code = 'FR'
        12:47:22.068166 line       249         language = pycountry.languages.get(alpha_2=language_alpha2)
        New var:....... language = Language(alpha_2='fr', alpha_3='fra', bibliographic='fre', name='French', scope='I', type='L')
        12:47:22.120161 line       250         if not language:
        12:47:22.121162 line       255         if country_code:
        12:47:22.121162 line       256             country = pycountry.countries.get(alpha_2=country_code)
        New var:....... country = Country(alpha_2='FR', alpha_3='FRA', flag='ðŸ‡«ðŸ‡·', ..., numeric='250', official_name='French Republic')
        12:47:22.124184 line       257             if not country:
        12:47:22.125189 line       264         return (f"{language_alpha2}-{country_code}", language_alpha2, language.name)
        12:47:22.125189 return     264         return (f"{language_alpha2}-{country_code}", language_alpha2, language.name)
        Return value:.. ('fr-FR', 'fr', 'French')
        Elapsed time: 00:00:00.061000
    New var:....... target_code = 'fr-FR'
    New var:....... target_alpha2 = 'fr'
    New var:....... target_name = 'French'
    12:47:22.126161 line       283             source_code, source_alpha2, source_name = self._validate_language_code(
    12:47:22.127160 line       284                 config_dict.get("SOURCE_LANGUAGE_CODE"), "SOURCE_LANGUAGE_CODE"
    12:47:22.127160 line       283             source_code, source_alpha2, source_name = self._validate_language_code(
        Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
        Starting var:.. code = 'en-GB'
        Starting var:.. field_name = 'SOURCE_LANGUAGE_CODE'
        12:47:22.127160 call       234     def _validate_language_code(
        12:47:22.128159 line       238         if not code:
        12:47:22.128159 line       241         try:
        12:47:22.129159 line       242             language_alpha2 = code.split("-")[0].lower()
        New var:....... language_alpha2 = 'en'
        12:47:22.129159 line       243             country_code = code.split("-")[1].upper() if "-" in code else None
        New var:....... country_code = 'GB'
        12:47:22.129159 line       249         language = pycountry.languages.get(alpha_2=language_alpha2)
        New var:....... language = Language(alpha_2='en', alpha_3='eng', name='English', scope='I', type='L')
        12:47:22.130160 line       250         if not language:
        12:47:22.130160 line       255         if country_code:
        12:47:22.130160 line       256             country = pycountry.countries.get(alpha_2=country_code)
        New var:....... country = Country(alpha_2='GB', alpha_3='GBR', flag='ðŸ‡¬ðŸ‡§', ...d Kingdom of Great Britain and Northern Ireland')
        12:47:22.131159 line       257             if not country:
        12:47:22.131159 line       264         return (f"{language_alpha2}-{country_code}", language_alpha2, language.name)
        12:47:22.131159 return     264         return (f"{language_alpha2}-{country_code}", language_alpha2, language.name)
        Return value:.. ('en-GB', 'en', 'English')
        Elapsed time: 00:00:00.005001
    New var:....... source_code = 'en-GB'
    New var:....... source_alpha2 = 'en'
    New var:....... source_name = 'English'
    12:47:22.132161 line       288             config_dict.update(
    12:47:22.133161 line       290                     "TARGET_LANGUAGE_CODE": target_code,
    12:47:22.133161 line       291                     "TARGET_LANGUAGE_ALPHA2": target_alpha2,
    12:47:22.134159 line       292                     "TARGET_LANGUAGE_NAME": target_name,
    12:47:22.134159 line       293                     "SOURCE_LANGUAGE_CODE": source_code,
    12:47:22.134159 line       294                     "SOURCE_LANGUAGE_ALPHA2": source_alpha2,
    12:47:22.134159 line       295                     "SOURCE_LANGUAGE_NAME": source_name,
    12:47:22.134159 line       289                 {
    12:47:22.135159 line       288             config_dict.update(
    Modified var:.. config_dict = {'SOURCE_LANGUAGE_CODE': 'en-GB', 'TARGET_LANGUA...ALPHA2': 'en', 'SOURCE_LANGUAGE_NAME': 'English'}
    12:47:22.135159 line       299             self.config = SimpleNamespace(**config_dict)
    12:47:22.135159 line       300             self._last_load_time = time.time()
    12:47:22.136163 line       303                 if os.path.exists(self.config_file)
    12:47:22.136163 line       302                 os.path.getmtime(self.config_file)
    12:47:22.136163 line       301             self._file_modified_time = (
    12:47:22.137160 return     301             self._file_modified_time = (
    Return value:.. None
    Elapsed time: 00:00:00.076000
12:47:22.137160 return     232         self._load_config()
Return value:.. None
Elapsed time: 00:00:00.080985
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
12:47:32.329084 call       319     def get_voice_models(self):
12:47:32.330084 line       321         try:
12:47:32.330084 line       322             source_voice = self.voice_manager.get_voice(
12:47:32.330084 line       323                 self.config.SOURCE_LANGUAGE_CODE, gender="MALE"
12:47:32.331085 line       322             source_voice = self.voice_manager.get_voice(
New var:....... source_voice = VoiceInfo(name='en-GB-Studio-B', provider=<Voice...B', country_code='GB', voice_id='en-GB-Studio-B')
12:47:35.155236 line       325             target_voice_female = self.voice_manager.get_voice(
12:47:35.155236 line       326                 self.config.TARGET_LANGUAGE_CODE, gender="FEMALE"
12:47:35.156201 line       325             target_voice_female = self.voice_manager.get_voice(
New var:....... target_voice_female = VoiceInfo(name='fr-FR-Studio-A', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-A')
12:47:35.156201 line       328             target_voice_male = self.voice_manager.get_voice(
12:47:35.157205 line       329                 self.config.TARGET_LANGUAGE_CODE, gender="MALE"
12:47:35.157205 line       328             target_voice_male = self.voice_manager.get_voice(
New var:....... target_voice_male = VoiceInfo(name='fr-FR-Studio-D', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-D')
12:47:35.158214 line       334                     "language_code": self.config.SOURCE_LANGUAGE_CODE,
12:47:35.158214 line       335                     "male_voice": source_voice.voice_id if source_voice else None,
12:47:35.159203 line       336                     "female_voice": None,
12:47:35.159203 line       333                 {
12:47:35.159203 line       339                     "language_code": self.config.TARGET_LANGUAGE_CODE,
12:47:35.159203 line       341                         target_voice_male.voice_id if target_voice_male else None
12:47:35.160203 line       344                         target_voice_female.voice_id if target_voice_female else None
12:47:35.160203 line       338                 {
12:47:35.160203 line       332             return (
12:47:35.160203 return     332             return (
Return value:.. ({'language_code': 'en-GB', 'male_voice': 'en-GB...-FR-Studio-D', 'female_voice': 'fr-FR-Studio-A'})
Elapsed time: 00:00:02.832119
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
Starting var:.. name = 'TARGET_LANGUAGE_CODE'
12:47:37.101334 call       374     def __getattr__(self, name):
12:47:37.101334 line       376         self._check_reload()  # Using direct attribute access
    Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
    12:47:37.102335 call       363     def _check_reload(self):
    12:47:37.102335 line       365         try:
    12:47:37.102335 line       366             if os.path.exists(self.config_file):
    12:47:37.103333 line       367                 current_mtime = os.path.getmtime(self.config_file)
    New var:....... current_mtime = 1732450297.811764
    12:47:37.103333 line       368                 if current_mtime > self._file_modified_time:
    12:47:37.103333 return     368                 if current_mtime > self._file_modified_time:
    Return value:.. None
    Elapsed time: 00:00:00.001998
12:47:37.104333 line       377         return getattr(self.config, name)  # Delegate to config object
12:47:37.104333 return     377         return getattr(self.config, name)  # Delegate to config object
Return value:.. 'fr-FR'
Elapsed time: 00:00:00.002999
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
Starting var:.. name = 'english_voice_models'
12:50:58.618096 call       374     def __getattr__(self, name):
12:50:58.619097 line       376         self._check_reload()  # Using direct attribute access
    Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
    12:50:58.619097 call       363     def _check_reload(self):
    12:50:58.619097 line       365         try:
    12:50:58.620096 line       366             if os.path.exists(self.config_file):
    12:50:58.620096 line       367                 current_mtime = os.path.getmtime(self.config_file)
    New var:....... current_mtime = 1732450297.811764
    12:50:58.620096 line       368                 if current_mtime > self._file_modified_time:
    12:50:58.621095 return     368                 if current_mtime > self._file_modified_time:
    Return value:.. None
    Elapsed time: 00:00:00.001998
12:50:58.621095 line       377         return getattr(self.config, name)  # Delegate to config object
12:50:58.621095 exception  377         return getattr(self.config, name)  # Delegate to config object
Exception:..... AttributeError: 'types.SimpleNamespace' object has no attribute 'english_voice_models'
Call ended by exception
Elapsed time: 00:00:00.004000
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
12:51:08.686424 call       319     def get_voice_models(self):
12:51:08.686424 line       321         try:
12:51:08.687426 line       322             source_voice = self.voice_manager.get_voice(
12:51:08.687426 line       323                 self.config.SOURCE_LANGUAGE_CODE, gender="MALE"
12:51:08.687426 line       322             source_voice = self.voice_manager.get_voice(
New var:....... source_voice = VoiceInfo(name='en-GB-Studio-B', provider=<Voice...B', country_code='GB', voice_id='en-GB-Studio-B')
12:51:08.688425 line       325             target_voice_female = self.voice_manager.get_voice(
12:51:08.688425 line       326                 self.config.TARGET_LANGUAGE_CODE, gender="FEMALE"
12:51:08.688425 line       325             target_voice_female = self.voice_manager.get_voice(
New var:....... target_voice_female = VoiceInfo(name='fr-FR-Studio-A', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-A')
12:51:08.688425 line       328             target_voice_male = self.voice_manager.get_voice(
12:51:08.689426 line       329                 self.config.TARGET_LANGUAGE_CODE, gender="MALE"
12:51:08.689426 line       328             target_voice_male = self.voice_manager.get_voice(
New var:....... target_voice_male = VoiceInfo(name='fr-FR-Studio-D', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-D')
12:51:08.689426 line       334                     "language_code": self.config.SOURCE_LANGUAGE_CODE,
12:51:08.690424 line       335                     "male_voice": source_voice.voice_id if source_voice else None,
12:51:08.690424 line       336                     "female_voice": None,
12:51:08.690424 line       333                 {
12:51:08.691423 line       339                     "language_code": self.config.TARGET_LANGUAGE_CODE,
12:51:08.691423 line       341                         target_voice_male.voice_id if target_voice_male else None
12:51:08.691423 line       344                         target_voice_female.voice_id if target_voice_female else None
12:51:08.691423 line       338                 {
12:51:08.691423 line       332             return (
12:51:08.692423 return     332             return (
Return value:.. ({'language_code': 'en-GB', 'male_voice': 'en-GB...-FR-Studio-D', 'female_voice': 'fr-FR-Studio-A'})
Elapsed time: 00:00:00.005999
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
12:51:55.708914 call       319     def get_voice_models(self):
12:51:55.712922 line       321         try:
12:51:55.713914 line       322             source_voice = self.voice_manager.get_voice(
12:51:55.713914 line       323                 self.config.SOURCE_LANGUAGE_CODE, gender="MALE"
12:51:55.713914 line       322             source_voice = self.voice_manager.get_voice(
New var:....... source_voice = VoiceInfo(name='en-GB-Studio-B', provider=<Voice...B', country_code='GB', voice_id='en-GB-Studio-B')
12:51:55.714915 line       325             target_voice_female = self.voice_manager.get_voice(
12:51:55.714915 line       326                 self.config.TARGET_LANGUAGE_CODE, gender="FEMALE"
12:51:55.715915 line       325             target_voice_female = self.voice_manager.get_voice(
New var:....... target_voice_female = VoiceInfo(name='fr-FR-Studio-A', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-A')
12:51:55.715915 line       328             target_voice_male = self.voice_manager.get_voice(
12:51:55.716914 line       329                 self.config.TARGET_LANGUAGE_CODE, gender="MALE"
12:51:55.716914 line       328             target_voice_male = self.voice_manager.get_voice(
New var:....... target_voice_male = VoiceInfo(name='fr-FR-Studio-D', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-D')
12:51:55.716914 line       334                     "language_code": self.config.SOURCE_LANGUAGE_CODE,
12:51:55.717915 line       335                     "male_voice": source_voice.voice_id if source_voice else None,
12:51:55.717915 line       336                     "female_voice": None,
12:51:55.718915 line       333                 {
12:51:55.718915 line       339                     "language_code": self.config.TARGET_LANGUAGE_CODE,
12:51:55.718915 line       341                         target_voice_male.voice_id if target_voice_male else None
12:51:55.719915 line       344                         target_voice_female.voice_id if target_voice_female else None
12:51:55.719915 line       338                 {
12:51:55.719915 line       332             return (
12:51:55.720915 return     332             return (
Return value:.. ({'language_code': 'en-GB', 'male_voice': 'en-GB...-FR-Studio-D', 'female_voice': 'fr-FR-Studio-A'})
Elapsed time: 00:00:00.012001
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
12:52:26.852308 call       319     def get_voice_models(self):
12:52:26.853307 line       321         try:
12:52:26.853307 line       322             source_voice = self.voice_manager.get_voice(
12:52:26.853307 line       323                 self.config.SOURCE_LANGUAGE_CODE, gender="MALE"
12:52:26.854312 line       322             source_voice = self.voice_manager.get_voice(
New var:....... source_voice = VoiceInfo(name='en-GB-Studio-B', provider=<Voice...B', country_code='GB', voice_id='en-GB-Studio-B')
12:52:26.854312 line       325             target_voice_female = self.voice_manager.get_voice(
12:52:26.854312 line       326                 self.config.TARGET_LANGUAGE_CODE, gender="FEMALE"
12:52:26.855310 line       325             target_voice_female = self.voice_manager.get_voice(
New var:....... target_voice_female = VoiceInfo(name='fr-FR-Studio-A', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-A')
12:52:26.855310 line       328             target_voice_male = self.voice_manager.get_voice(
12:52:26.855310 line       329                 self.config.TARGET_LANGUAGE_CODE, gender="MALE"
12:52:26.855310 line       328             target_voice_male = self.voice_manager.get_voice(
New var:....... target_voice_male = VoiceInfo(name='fr-FR-Studio-D', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-D')
12:52:26.856310 line       334                     "language_code": self.config.SOURCE_LANGUAGE_CODE,
12:52:26.856310 line       335                     "male_voice": source_voice.voice_id if source_voice else None,
12:52:26.857309 line       336                     "female_voice": None,
12:52:26.857309 line       333                 {
12:52:26.857309 line       339                     "language_code": self.config.TARGET_LANGUAGE_CODE,
12:52:26.857309 line       341                         target_voice_male.voice_id if target_voice_male else None
12:52:26.858309 line       344                         target_voice_female.voice_id if target_voice_female else None
12:52:26.858309 line       338                 {
12:52:26.858309 line       332             return (
12:52:26.858309 return     332             return (
Return value:.. ({'language_code': 'en-GB', 'male_voice': 'en-GB...-FR-Studio-D', 'female_voice': 'fr-FR-Studio-A'})
Elapsed time: 00:00:00.007000
Starting var:.. self = <src.config_loader.ConfigLoader object at 0x000001C5572AB110>
13:08:01.061230 call       319     def get_voice_models(self):
13:08:01.062231 line       321         try:
13:08:01.063230 line       322             source_voice = self.voice_manager.get_voice(
13:08:01.063230 line       323                 self.config.SOURCE_LANGUAGE_CODE, gender="MALE"
13:08:01.064230 line       322             source_voice = self.voice_manager.get_voice(
New var:....... source_voice = VoiceInfo(name='en-GB-Studio-B', provider=<Voice...B', country_code='GB', voice_id='en-GB-Studio-B')
13:08:01.064230 line       325             target_voice_female = self.voice_manager.get_voice(
13:08:01.065230 line       326                 self.config.TARGET_LANGUAGE_CODE, gender="FEMALE"
13:08:01.065230 line       325             target_voice_female = self.voice_manager.get_voice(
New var:....... target_voice_female = VoiceInfo(name='fr-FR-Studio-A', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-A')
13:08:01.066239 line       328             target_voice_male = self.voice_manager.get_voice(
13:08:01.066239 line       329                 self.config.TARGET_LANGUAGE_CODE, gender="MALE"
13:08:01.067228 line       328             target_voice_male = self.voice_manager.get_voice(
New var:....... target_voice_male = VoiceInfo(name='fr-FR-Studio-D', provider=<Voice...R', country_code='FR', voice_id='fr-FR-Studio-D')
13:08:01.067228 line       334                     "language_code": self.config.SOURCE_LANGUAGE_CODE,
13:08:01.068230 line       335                     "male_voice": source_voice.voice_id if source_voice else None,
13:08:01.068230 line       336                     "female_voice": None,
13:08:01.068230 line       333                 {
13:08:01.069230 line       339                     "language_code": self.config.TARGET_LANGUAGE_CODE,
13:08:01.069230 line       341                         target_voice_male.voice_id if target_voice_male else None
13:08:01.069230 line       344                         target_voice_female.voice_id if target_voice_female else None
13:08:01.070228 line       338                 {
13:08:01.070228 line       332             return (
13:08:01.070228 return     332             return (
Return value:.. ({'language_code': 'en-GB', 'male_voice': 'en-GB...-FR-Studio-D', 'female_voice': 'fr-FR-Studio-A'})
Elapsed time: 00:00:00.010011
